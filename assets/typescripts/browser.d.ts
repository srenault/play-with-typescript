declare var encodeURIComponent: any;
declare var Error: any;
declare var Infinity: any;
declare var Object: any;
declare var require: any;
declare var SyntaxError: any;
declare var String: any;
declare var _uid: any;
declare var unescape: any;
declare var RegExp: any;
declare var RangeError: any;
declare var location: any;
declare var encodeURI: any;
declare var isNaN: any;
declare var $: any;
declare var isFinite: any;
declare var History: any;
declare var URIError: any;
declare var EvalError: any;
declare var jQuery: any;
declare var onstatechange: any;
declare var chrome: any;
declare var ReferenceError: any;
declare var Number: any;
declare var window: any;
declare var external: any;
declare var Intl: any;
declare var TypeError: any;
declare var document: any;
declare var JSON: any;
declare var requirejs: any;
declare var NaN: any;
declare var ArrayBuffer: any;
declare var eval: any;
declare var Math: any;
declare var parseFloat: any;
declare var Array: any;
declare var decodeURIComponent: any;
declare var parseInt: any;
declare var Router: any;
declare var decodeURI: any;
declare var Date: any;
declare var top: any;
declare var escape: any;
declare var Boolean: any;
declare var define: any;
declare var webkitNotifications: any;
declare var WebKitSourceBufferList: any;
declare var WebKitSourceBuffer: any;
declare var WebKitMediaSource: any;
declare var SharedWorker: any;
declare var TrackEvent: any;
declare var TextTrackList: any;
declare var TextTrackCueList: any;
declare var TextTrackCue: any;
declare var TextTrack: any;
declare var TimeRanges: any;
declare var MediaKeyEvent: any;
declare var MediaKeyError: any;
declare var MediaError: any;
declare var MediaController: any;
declare var HTMLVideoElement: any;
declare var HTMLTrackElement: any;
declare var HTMLSourceElement: any;
declare var HTMLMediaElement: any;
declare var HTMLDataListElement: any;
declare var Audio: any;
declare var HTMLAudioElement: any;
declare var webkitSpeechRecognitionEvent: any;
declare var webkitSpeechRecognitionError: any;
declare var webkitSpeechRecognition: any;
declare var webkitSpeechGrammarList: any;
declare var webkitSpeechGrammar: any;
declare var webkitRTCPeerConnection: any;
declare var webkitOfflineAudioContext: any;
declare var webkitAudioContext: any;
declare var webkitMediaStream: any;
declare var localStorage: any;
declare var sessionStorage: any;
declare var applicationCache: any;
declare var webkitStorageInfo: any;
declare var indexedDB: any;
declare var webkitIndexedDB: any;
declare var crypto: any;
declare var PeriodicWave: any;
declare var WebGLUniformLocation: any;
declare var WebGLTexture: any;
declare var WebGLShader: any;
declare var WebGLRenderbuffer: any;
declare var WebGLProgram: any;
declare var WebGLFramebuffer: any;
declare var WebGLBuffer: any;
declare var CanvasPattern: any;
declare var Rect: any;
declare var RGBColor: any;
declare var SVGZoomEvent: any;
declare var SVGViewSpec: any;
declare var SVGViewElement: any;
declare var SVGVKernElement: any;
declare var SVGUseElement: any;
declare var SVGUnitTypes: any;
declare var SVGTransformList: any;
declare var SVGTransform: any;
declare var SVGTitleElement: any;
declare var SVGTextPositioningElement: any;
declare var SVGTextPathElement: any;
declare var SVGTextElement: any;
declare var SVGTextContentElement: any;
declare var SVGTSpanElement: any;
declare var SVGTRefElement: any;
declare var SVGSymbolElement: any;
declare var SVGSwitchElement: any;
declare var SVGStyleElement: any;
declare var SVGStringList: any;
declare var SVGStopElement: any;
declare var SVGSetElement: any;
declare var SVGScriptElement: any;
declare var SVGSVGElement: any;
declare var SVGRenderingIntent: any;
declare var SVGRectElement: any;
declare var SVGRect: any;
declare var SVGRadialGradientElement: any;
declare var SVGPreserveAspectRatio: any;
declare var SVGPolylineElement: any;
declare var SVGPolygonElement: any;
declare var SVGPointList: any;
declare var SVGPoint: any;
declare var SVGPatternElement: any;
declare var SVGPathSegMovetoRel: any;
declare var SVGPathSegMovetoAbs: any;
declare var SVGPathSegList: any;
declare var SVGPathSegLinetoVerticalRel: any;
declare var SVGPathSegLinetoVerticalAbs: any;
declare var SVGPathSegLinetoRel: any;
declare var SVGPathSegLinetoHorizontalRel: any;
declare var SVGPathSegLinetoHorizontalAbs: any;
declare var SVGPathSegLinetoAbs: any;
declare var SVGPathSegCurvetoQuadraticSmoothRel: any;
declare var SVGPathSegCurvetoQuadraticSmoothAbs: any;
declare var SVGPathSegCurvetoQuadraticRel: any;
declare var SVGPathSegCurvetoQuadraticAbs: any;
declare var SVGPathSegCurvetoCubicSmoothRel: any;
declare var SVGPathSegCurvetoCubicSmoothAbs: any;
declare var SVGPathSegCurvetoCubicRel: any;
declare var SVGPathSegCurvetoCubicAbs: any;
declare var SVGPathSegClosePath: any;
declare var SVGPathSegArcRel: any;
declare var SVGPathSegArcAbs: any;
declare var SVGPathSeg: any;
declare var SVGPathElement: any;
declare var SVGPaint: any;
declare var SVGNumberList: any;
declare var SVGNumber: any;
declare var SVGMissingGlyphElement: any;
declare var SVGMetadataElement: any;
declare var SVGMatrix: any;
declare var SVGMaskElement: any;
declare var SVGMarkerElement: any;
declare var SVGMPathElement: any;
declare var SVGLinearGradientElement: any;
declare var SVGLineElement: any;
declare var SVGLengthList: any;
declare var SVGLength: any;
declare var SVGImageElement: any;
declare var SVGHKernElement: any;
declare var SVGGraphicsElement: any;
declare var SVGGradientElement: any;
declare var SVGGlyphRefElement: any;
declare var SVGGlyphElement: any;
declare var SVGGElement: any;
declare var SVGForeignObjectElement: any;
declare var SVGFontFaceUriElement: any;
declare var SVGFontFaceSrcElement: any;
declare var SVGFontFaceNameElement: any;
declare var SVGFontFaceFormatElement: any;
declare var SVGFontFaceElement: any;
declare var SVGFontElement: any;
declare var SVGFilterElement: any;
declare var SVGFETurbulenceElement: any;
declare var SVGFETileElement: any;
declare var SVGFESpotLightElement: any;
declare var SVGFESpecularLightingElement: any;
declare var SVGFEPointLightElement: any;
declare var SVGFEOffsetElement: any;
declare var SVGFEMorphologyElement: any;
declare var SVGFEMergeNodeElement: any;
declare var SVGFEMergeElement: any;
declare var SVGFEImageElement: any;
declare var SVGFEGaussianBlurElement: any;
declare var SVGFEFuncRElement: any;
declare var SVGFEFuncGElement: any;
declare var SVGFEFuncBElement: any;
declare var SVGFEFuncAElement: any;
declare var SVGFEFloodElement: any;
declare var SVGFEDropShadowElement: any;
declare var SVGFEDistantLightElement: any;
declare var SVGFEDisplacementMapElement: any;
declare var SVGFEDiffuseLightingElement: any;
declare var SVGFEConvolveMatrixElement: any;
declare var SVGFECompositeElement: any;
declare var SVGFEComponentTransferElement: any;
declare var SVGFEColorMatrixElement: any;
declare var SVGFEBlendElement: any;
declare var SVGEllipseElement: any;
declare var SVGElementInstanceList: any;
declare var SVGElementInstance: any;
declare var SVGElement: any;
declare var SVGDocument: any;
declare var SVGDescElement: any;
declare var SVGDefsElement: any;
declare var SVGCursorElement: any;
declare var SVGComponentTransferFunctionElement: any;
declare var SVGColor: any;
declare var SVGClipPathElement: any;
declare var SVGCircleElement: any;
declare var SVGAnimationElement: any;
declare var SVGAnimatedTransformList: any;
declare var SVGAnimatedString: any;
declare var SVGAnimatedRect: any;
declare var SVGAnimatedPreserveAspectRatio: any;
declare var SVGAnimatedNumberList: any;
declare var SVGAnimatedNumber: any;
declare var SVGAnimatedLengthList: any;
declare var SVGAnimatedLength: any;
declare var SVGAnimatedInteger: any;
declare var SVGAnimatedEnumeration: any;
declare var SVGAnimatedBoolean: any;
declare var SVGAnimatedAngle: any;
declare var SVGAnimateTransformElement: any;
declare var SVGAnimateMotionElement: any;
declare var SVGAnimateElement: any;
declare var SVGAnimateColorElement: any;
declare var SVGAngle: any;
declare var SVGAltGlyphItemElement: any;
declare var SVGAltGlyphElement: any;
declare var SVGAltGlyphDefElement: any;
declare var SVGAElement: any;
declare var WebSocket: any;
declare var CloseEvent: any;
declare var WaveShaperNode: any;
declare var AnalyserNode: any;
declare var OscillatorNode: any;
declare var OfflineAudioCompletionEvent: any;
declare var MediaStreamAudioSourceNode: any;
declare var MediaStreamAudioDestinationNode: any;
declare var MediaElementAudioSourceNode: any;
declare var ScriptProcessorNode: any;
declare var DynamicsCompressorNode: any;
declare var DelayNode: any;
declare var ConvolverNode: any;
declare var BiquadFilterNode: any;
declare var AudioProcessingEvent: any;
declare var AudioParam: any;
declare var AudioNode: any;
declare var AudioListener: any;
declare var GainNode: any;
declare var AudioDestinationNode: any;
declare var ChannelSplitterNode: any;
declare var ChannelMergerNode: any;
declare var AudioBufferSourceNode: any;
declare var AudioBuffer: any;
declare var Notification: any;
declare var RTCSessionDescription: any;
declare var RTCIceCandidate: any;
declare var MediaStreamTrack: any;
declare var MediaStreamEvent: any;
declare var IDBVersionChangeEvent: any;
declare var IDBTransaction: any;
declare var IDBRequest: any;
declare var IDBOpenDBRequest: any;
declare var IDBObjectStore: any;
declare var IDBKeyRange: any;
declare var IDBIndex: any;
declare var IDBFactory: any;
declare var IDBDatabase: any;
declare var IDBCursorWithValue: any;
declare var IDBCursor: any;
declare var DeviceOrientationEvent: any;
declare var XSLTProcessor: any;
declare var XPathResult: any;
declare var XPathExpression: any;
declare var XPathEvaluator: any;
declare var XMLSerializer: any;
declare var XMLHttpRequestUpload: any;
declare var XMLHttpRequestProgressEvent: any;
declare var XMLHttpRequest: any;
declare var DOMParser: any;
declare var Worker: any;
declare var StorageEvent: any;
declare var Storage: any;
declare var PluginArray: any;
declare var Plugin: any;
declare var MimeTypeArray: any;
declare var MimeType: any;
declare var Window: any;
declare var WebKitPoint: any;
declare var SpeechInputEvent: any;
declare var Selection: any;
declare var SecurityPolicy: any;
declare var Screen: any;
declare var PerformanceTiming: any;
declare var PerformanceResourceTiming: any;
declare var PerformanceNavigation: any;
declare var PerformanceMeasure: any;
declare var PerformanceMark: any;
declare var PerformanceEntry: any;
declare var Performance: any;
declare var Navigator: any;
declare var Location: any;
declare var ImageBitmap: any;
declare var History: any;
declare var EventSource: any;
declare var BarProp: any;
declare var HTMLShadowElement: any;
declare var HTMLContentElement: any;
declare var InputMethodContext: any;
declare var WebGLShaderPrecisionFormat: any;
declare var WebGLRenderingContext: any;
declare var WebGLContextEvent: any;
declare var WebGLActiveInfo: any;
declare var Uint8ClampedArray: any;
declare var Uint8Array: any;
declare var Uint32Array: any;
declare var Uint16Array: any;
declare var Int8Array: any;
declare var Int32Array: any;
declare var Int16Array: any;
declare var Float64Array: any;
declare var Float32Array: any;
declare var DataView: any;
declare var CanvasRenderingContext2D: any;
declare var CanvasGradient: any;
declare var ValidityState: any;
declare var URL: any;
declare var TextMetrics: any;
declare var ImageData: any;
declare var HTMLUnknownElement: any;
declare var HTMLUListElement: any;
declare var HTMLTitleElement: any;
declare var HTMLTemplateElement: any;
declare var HTMLTextAreaElement: any;
declare var HTMLTableSectionElement: any;
declare var HTMLTableRowElement: any;
declare var HTMLTableElement: any;
declare var HTMLTableColElement: any;
declare var HTMLTableCellElement: any;
declare var HTMLTableCaptionElement: any;
declare var HTMLStyleElement: any;
declare var HTMLSpanElement: any;
declare var HTMLSelectElement: any;
declare var HTMLScriptElement: any;
declare var HTMLQuoteElement: any;
declare var HTMLProgressElement: any;
declare var HTMLPreElement: any;
declare var HTMLParamElement: any;
declare var HTMLParagraphElement: any;
declare var HTMLOutputElement: any;
declare var HTMLOptionsCollection: any;
declare var Option: any;
declare var HTMLOptionElement: any;
declare var HTMLOptGroupElement: any;
declare var HTMLObjectElement: any;
declare var HTMLOListElement: any;
declare var HTMLModElement: any;
declare var HTMLMeterElement: any;
declare var HTMLMetaElement: any;
declare var HTMLMenuElement: any;
declare var HTMLMarqueeElement: any;
declare var HTMLMapElement: any;
declare var HTMLLinkElement: any;
declare var HTMLLegendElement: any;
declare var HTMLLabelElement: any;
declare var HTMLLIElement: any;
declare var HTMLKeygenElement: any;
declare var HTMLInputElement: any;
declare var HTMLImageElement: any;
declare var HTMLIFrameElement: any;
declare var HTMLHtmlElement: any;
declare var HTMLHeadingElement: any;
declare var HTMLHeadElement: any;
declare var HTMLHRElement: any;
declare var HTMLFrameSetElement: any;
declare var HTMLFrameElement: any;
declare var HTMLFormElement: any;
declare var HTMLFormControlsCollection: any;
declare var HTMLFontElement: any;
declare var HTMLFieldSetElement: any;
declare var HTMLEmbedElement: any;
declare var HTMLElement: any;
declare var HTMLDocument: any;
declare var HTMLDivElement: any;
declare var HTMLDirectoryElement: any;
declare var HTMLDListElement: any;
declare var HTMLCollection: any;
declare var HTMLCanvasElement: any;
declare var HTMLButtonElement: any;
declare var HTMLBodyElement: any;
declare var HTMLBaseElement: any;
declare var HTMLBRElement: any;
declare var HTMLAreaElement: any;
declare var HTMLAppletElement: any;
declare var HTMLAnchorElement: any;
declare var HTMLAllCollection: any;
declare var FormData: any;
declare var DOMTokenList: any;
declare var DOMSettableTokenList: any;
declare var FileReader: any;
declare var FileList: any;
declare var FileError: any;
declare var File: any;
declare var Blob: any;
declare var WheelEvent: any;
declare var WebKitAnimationEvent: any;
declare var UIEvent: any;
declare var TreeWalker: any;
declare var TransitionEvent: any;
declare var TouchList: any;
declare var TouchEvent: any;
declare var Touch: any;
declare var TextEvent: any;
declare var Text: any;
declare var Range: any;
declare var ProgressEvent: any;
declare var ProcessingInstruction: any;
declare var PopStateEvent: any;
declare var PageTransitionEvent: any;
declare var OverflowEvent: any;
declare var Notation: any;
declare var NodeList: any;
declare var NodeIterator: any;
declare var NodeFilter: any;
declare var Node: any;
declare var NamedNodeMap: any;
declare var MutationRecord: any;
declare var MutationObserver: any;
declare var MutationEvent: any;
declare var MouseEvent: any;
declare var MessagePort: any;
declare var MessageEvent: any;
declare var MessageChannel: any;
declare var KeyboardEvent: any;
declare var HashChangeEvent: any;
declare var FocusEvent: any;
declare var EventTarget: any;
declare var Event: any;
declare var ErrorEvent: any;
declare var Entity: any;
declare var Element: any;
declare var DocumentType: any;
declare var DocumentFragment: any;
declare var Document: any;
declare var DOMStringMap: any;
declare var DOMStringList: any;
declare var DOMImplementation: any;
declare var DOMException: any;
declare var CustomEvent: any;
declare var CompositionEvent: any;
declare var Comment: any;
declare var Clipboard: any;
declare var ClientRectList: any;
declare var ClientRect: any;
declare var CharacterData: any;
declare var CDATASection: any;
declare var BeforeLoadEvent: any;
declare var AutocompleteErrorEvent: any;
declare var Attr: any;
declare var WebKitCSSTransformValue: any;
declare var WebKitCSSMixFunctionValue: any;
declare var WebKitCSSMatrix: any;
declare var WebKitCSSKeyframesRule: any;
declare var WebKitCSSKeyframeRule: any;
declare var WebKitCSSFilterValue: any;
declare var WebKitCSSFilterRule: any;
declare var StyleSheetList: any;
declare var StyleSheet: any;
declare var MediaList: any;
declare var Counter: any;
declare var CSSVariablesMap: any;
declare var CSSViewportRule: any;
declare var CSSValueList: any;
declare var CSSValue: any;
declare var CSSStyleSheet: any;
declare var CSSStyleRule: any;
declare var CSSStyleDeclaration: any;
declare var CSSRuleList: any;
declare var CSSRule: any;
declare var CSSPrimitiveValue: any;
declare var CSSPageRule: any;
declare var CSSMediaRule: any;
declare var CSSImportRule: any;
declare var CSSHostRule: any;
declare var CSSFontFaceRule: any;
declare var CSSCharsetRule: any;
declare var WebKitShadowRoot: any;
declare var webkitAudioPannerNode: any;
declare var webkitIDBTransaction: any;
declare var webkitIDBRequest: any;
declare var webkitIDBObjectStore: any;
declare var webkitIDBKeyRange: any;
declare var webkitIDBIndex: any;
declare var webkitIDBFactory: any;
declare var webkitIDBDatabase: any;
declare var webkitIDBCursor: any;
declare var WebKitMutationObserver: any;
declare var webkitURL: any;
declare var XMLDocument: any;
declare var Image: any;
declare var WebKitTransitionEvent: any;
declare var CSS: any;
declare var performance: any;
declare var console: any;
declare var devicePixelRatio: any;
declare var styleMedia: any;
declare var document: any;
declare var parent: any;
declare var opener: any;
declare var frames: any;
declare var self: any;
declare var defaultstatus: any;
declare var defaultStatus: any;
declare var status: any;
declare var name: any;
declare var length: any;
declare var closed: any;
declare var pageYOffset: any;
declare var pageXOffset: any;
declare var scrollY: any;
declare var scrollX: any;
declare var screenTop: any;
declare var screenLeft: any;
declare var screenY: any;
declare var screenX: any;
declare var innerWidth: any;
declare var innerHeight: any;
declare var outerWidth: any;
declare var outerHeight: any;
declare var offscreenBuffering: any;
declare var frameElement: any;
declare var event: any;
declare var clientInformation: any;
declare var navigator: any;
declare var toolbar: any;
declare var statusbar: any;
declare var scrollbars: any;
declare var personalbar: any;
declare var menubar: any;
declare var locationbar: any;
declare var history: any;
declare var screen: any
declare var alert: any;

interface Function {
    apply(thisArg: any, argArray?: any): any;
    call(thisArg: any, ...argArray: any[]): any;
    bind(thisArg: any, ...argArray: any[]): any;

    prototype: any;
    length: number;

    // Non-standard extensions
    arguments: any;
    caller: Function;
}

declare var Function: {
    new (...args: string[]): Function;
    (...args: string[]): Function;
    prototype: Function;
}